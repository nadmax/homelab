- hosts: hosts
  become: true
  vars_files:
    - ../vaults/vault_ssh.yaml
    - ../vaults/vault_become.yaml
  tasks:
    - name: Add Kubernetes yum repository
      copy:
        dest: /etc/yum.repos.d/kubernetes.repo
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.32/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.32/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
        mode: '0644'

    - name: Install Kubernetes packages with --disableexcludes
      yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        disable_excludes: kubernetes

    - name: Enable and start kubelet
      systemd:
        name: kubelet
        state: started
        enabled: true

- hosts: controlplane
  become: true
  vars_files:
    - ../vaults/vault_ssh.yaml
    - ../vaults/vault_become.yaml
  vars:
    kube_tcp_ports:
      - 6443      # Kubernetes API server
      - 10250     # Kubelet API
      - 10257     # kube-controller-manager
      - 10259     # kube-scheduler
    kube_tcp_port_ranges:
      - "2379-2380"  # etcd client API
  tasks:
    - name: Ensure nftables service is enabled and started
      systemd:
        name: nftables
        enabled: true
        state: started

    - name: Create nftables ruleset for Kubernetes
      copy:
        dest: /etc/nftables.conf
        owner: root
        group: root
        mode: '0644'
        content: |
          flush ruleset

          table inet filter {
            chain input {
              type filter hook input priority 0;

              # Accept established and related connections
              ct state established,related accept

              # Allow loopback
              iif lo accept

              # Allow SSH
              tcp dport 22 accept

              # Allow Kubernetes ports
              {% for port in kube_tcp_ports %}
              tcp dport {{ port }} accept
              {% endfor %}

              {% for range in kube_tcp_port_ranges %}
              tcp dport {{ range }} accept
              {% endfor %}

              # Drop everything else
              counter drop
            }
          }
  
    - name: Reload nftables rules
      command: nft -f /etc/nftables.conf

    - name: Initialize Kubernetes master node
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init
      when: ansible_hostname == "controlplane"

    - name: Save kubeadm join command
      set_fact:
        kubeadm_join_command: "{{ kubeadm_init.stdout_lines[-1] }}"
      when: ansible_hostname == "controlplane"

    - name: Set kubeconfig for master node
      copy:
        content: "{{ lookup('file', '/etc/kubernetes/admin.conf') }}"
        dest: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        mode: "0600"
      when: ansible_hostname == "controlplane"

    - name: Apply pod network (Flannel)
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      when: ansible_hostname == "controlplane"

- hosts: worker1, worker2
  become: true
  vars_files:
    - ../vaults/vault_ssh.yaml
    - ../vaults/vault_become.yaml
  tasks:
    - name: Ensure firewalld is running
      systemd:
        name: firewalld
        state: started
        enabled: true

    - name: Open required Kubernetes ports in firewalld
      firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        immediate: true
        state: enabled
      loop:
        - 10250   # Kubelet API
        - 10256 # kube-proxy
        - 30000-32767  # NodePort range

    - name: Join worker nodes to Kubernetes cluster
      command: "{{ hostvars['controlplane']['kubeadm_join_command'] }}"
      when: ansible_hostname != "controlplane"