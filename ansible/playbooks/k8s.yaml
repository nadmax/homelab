- name: Setup Kubernetes
  hosts: all
  become: true
  vars_files:
    - vaults/vault
  tasks:
    - name: Install Kubernetes packages
      ansible.builtin.dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Install tc (iproute) tool
      ansible.builtin.dnf:
        name: iproute-tc
        state: present

    - name: Ensure IP forwarding is enabled in /etc/sysctl.conf
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present
        reload: true

    - name: Enable and start kubelet
      ansible.builtin.systemd:
        name: kubelet
        state: started
        enabled: true

    - name: Install containerd
      ansible.builtin.dnf:
        name: containerd
        state: present

    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: true

    - name: Run containerd config default command
      ansible.builtin.command: containerd config default > /etc/containerd/config.toml
      changed_when: false

    - name: Ensure SystemdCgroup is set to true
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        line: 'SystemdCgroup = true'
        insertafter: '[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]'
        regexp: '^SystemdCgroup'
        state: present
        backup: true

    - name: Disable swap
      ansible.builtin.command: swapoff -a
      changed_when: false

    - name: Mask swap device
      ansible.builtin.systemd:
        name: dev-zram0.swap
        masked: true

    - name: Load br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: Ensure br_netfilter is loaded on boot
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/kubernetes.conf
        line: 'br_netfilter'
        create: true
        mode: "0600"

    - name: Make sure firewalld is running
      ansible.builtin.systemd:
        state: started
        name: firewalld

- name: Open Kubernetes ports on masters
  hosts: masters
  become: true
  vars_files:
    - vaults/vault
  tasks:
    - name: Open required Kubernetes ports on controlplane
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 6443/tcp
        - 10250/tcp
        - 10251/tcp
        - 10252/tcp
        - 8472/udp
        - 179/tcp
      notify: Reload firewalld
  handlers:
    - name: Reload firewalld
      ansible.builtin.service:
        name: firewalld
        state: reloaded

- name: Initialize Kubernetes Master Node
  hosts: masters
  become: true
  vars_files:
    - vaults/vault
  tasks:
    - name: Initialize Kubernetes using kubeadm
      ansible.builtin.command: kubeadm init --pod-network-cidr=192.168.0.0/16
      register: kubeadm_init_result
      changed_when: "'initialized' in kubeadm_init_result.stdout"

    - name: Copy kubeconfig to user home
      ansible.builtin.shell: |
        mkdir -p /home/{{ ansible_user }}/.kube
        cp -i /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config
        chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config
      become: true
      changed_when: false

    - name: Get kubeadm join command
      ansible.builtin.command: kubeadm token create --print-join-command
      environment:
        KUBECONFIG: ~/.kube/config
      register: join_command
      delegate_to: controlplane
      changed_when: false

    - name: Set kubeadm_join_cmd fact
      ansible.builtin.set_fact:
        kubeadm_join_cmd: "{{ join_command.stdout }}"

- name: Open Kubernetes ports on workers
  hosts: workers
  become: true
  vars_files:
    - vaults/vault
  tasks:
    - name: Open ports using firewalld
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 10250/tcp
        - 30000-32767/tcp
        - 8472/udp
        - 179/tcp
      notify: Reload firewalld
  handlers:
    - name: Reload firewalld
      ansible.builtin.service:
        name: firewalld
        state: reloaded

- name: Join Worker Nodes to Cluster
  hosts: workers
  become: true
  vars_files:
    - vaults/vault
  tasks:
    - name: Reset any existing Kubernetes state
      ansible.builtin.shell: |
        kubeadm reset -f
        rm -rf /etc/cni/net.d /var/lib/cni /var/lib/kubelet /etc/kubernetes
        systemctl restart containerd
        systemctl restart kubelet
      changed_when: false

    - name: Join worker node to Kubernetes cluster
      ansible.builtin.shell: |
        {{ hostvars['controlplane'].kubeadm_join_cmd }}
      when: hostvars['controlplane'].kubeadm_join_cmd is defined
      changed_when: false
